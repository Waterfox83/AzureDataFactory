{
	"name": "ItemStatusRenameDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "FailedItemsCSV",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "FinalTargetBlobService",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "FinalTargetBlobService",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "Filter1"
				},
				{
					"name": "RenameItemStatusCode"
				},
				{
					"name": "AggregateOnSupplier"
				}
			],
			"script": "source(output(\n\t\tITEM_NBR as string,\n\t\tGTIN as string,\n\t\tDEPT_NBR as string,\n\t\tSUBCLASS_NBR as string,\n\t\tVENDOR_NBR as string,\n\t\tVENDOR_DEPT_NBR as string,\n\t\tVENDOR_SEQ_NBR as string,\n\t\tSupplier_Name as string,\n\t\tITEM_STATUS_CODE as string,\n\t\tIs_GDSN as string,\n\t\tITEM1_DESC as string,\n\t\tITEM2_DESC as string,\n\t\tSIGNING_DESC as string,\n\t\tSIGNING1_DESC as string,\n\t\tSIGNING2_DESC as string,\n\t\tDC_Count as integer '000',\n\t\tClub_Count as integer '000',\n\t\tTOTAL_SALE_QTY as string,\n\t\tTOTAL_SALES_AMT as double '000,000,000.000',\n\t\t{Comments for not to migrate} as string,\n\t\tMerchant as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 filter(TOTAL_SALES_AMT>0) ~> Filter1\nFilter1 derive(ITEM_STATUS_CODE = case(ITEM_STATUS_CODE == \"D\", \"DELETED\", case(ITEM_STATUS_CODE == \"A\", \"ALIVE\", \"IN TRANSIT\"))\n) ~> RenameItemStatusCode\nFilter1 aggregate(groupBy(Supplier_Name),\n\tCountBySupplier = count(ITEM_NBR)) ~> AggregateOnSupplier\nRenameItemStatusCode sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['CleanedUpOutput.txt'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nAggregateOnSupplier sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tfilePattern:'SupplierCounter.txt',\n\ttruncate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2"
		}
	}
}